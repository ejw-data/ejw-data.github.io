<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-09-10T17:26:05-05:00</updated><id>/feed.xml</id><title type="html">ERIN WILLS</title><subtitle>By possessing both technical and managerial skills,  Erin is highly adaptive particularly with learning and teaching new technology.
</subtitle><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><entry><title type="html">Linear Programming …</title><link href="/articles/tech/2023-05-12-linear-programming/" rel="alternate" type="text/html" title="Linear Programming …" /><published>2023-05-12T00:00:00-05:00</published><updated>2023-08-09T09:05:55-05:00</updated><id>/articles/tech/linear-programming</id><content type="html" xml:base="/articles/tech/2023-05-12-linear-programming/">&lt;hr /&gt;

&lt;p&gt;I am fairly accustomed to using different methods to solve problems.  In most cases I need to break down the problem to find a creative and custom solution because no documentation of something similar can be found.  I almost always start by having a simple solution mapped out in excel and then to complete the calculations I create the calculations in code.  This is often necessary since the complexity of the calculations become unwieldly in excel.&lt;/p&gt;

&lt;p&gt;Until recently, I did not realize that many of the solutions I created were just linear programs.  Some examples were just graphical solutions but as the problems became more complicated, I was creating greedy solutions or recursive solutions.  Some of my solutions were even using the Excel Solver feature which is a form of linear programming.&lt;/p&gt;

&lt;p&gt;I have now started using the python package called PuLP.  It is a great linear programming package that simplifies the setup and reduces the time needed to test the code.  I was able to design, run, and validate my solutions in one afternoon.  My inspiration to learn more about linear programming occurred when reading about urban planning and finding that the transportation problems were often solved by optimizing schedules.&lt;/p&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="tech" /><category term="Tech" /><category term="tools" /><category term="overview" /><summary type="html">I am fairly accustomed to using different methods to solve problems. In most cases I need to break down the problem to find a creative and custom solution because no documentation of something similar can be found. I almost always start by having a simple solution mapped out in excel and then to complete the calculations I create the calculations in code. This is often necessary since the complexity of the calculations become unwieldly in excel.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/code.jpg" /><media:content medium="image" url="/assets/img/blog/code.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Favorite Movies…</title><link href="/articles/person/personal/2023-05-10-movies/" rel="alternate" type="text/html" title="Favorite Movies…" /><published>2023-05-10T00:00:00-05:00</published><updated>2023-06-21T14:33:07-05:00</updated><id>/articles/person/personal/movies</id><content type="html" xml:base="/articles/person/personal/2023-05-10-movies/">&lt;hr /&gt;

&lt;p&gt;Recently, I was talking to some friends that were born in east Asia and lived in the United States for a limited time.  At the time, I had been watching several Youtube videos about first time reactions to movies which led me to ask them how many Hollywood films they had seen that were made before 2000.  I was not really surprised but they could name very few and some of the most iconic movies were completely unknown to them.  This led to hours of talking about the best movies we had all seen and below are some movies that I thought were some of the best.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Action&lt;/code&gt;:  Christopher Nolan’s &lt;em&gt;Batman&lt;/em&gt; series  is very good but Matt Reeve’s &lt;em&gt;Batman&lt;/em&gt; series could be a good competitor if the series continues to develop the Batman character as a detective but then maybe this movie might be the best &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mystery&lt;/code&gt; category.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Animation&lt;/code&gt;:  I like most animated movies especially as something to play in the background while I work on something but I will say that there are two series that stand above the rest - &lt;em&gt;Kung Fu Panda&lt;/em&gt; and &lt;em&gt;How to Train a Dragon&lt;/em&gt;.  Both of these series produce very good stories and take some risks.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Rom-Com&lt;/code&gt;:   Most popular choice was &lt;em&gt;Sleepless in Seattle&lt;/em&gt; but my favorite was released a year later in 1994 and was &lt;em&gt;While You Were Sleeping&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Science Fiction&lt;/code&gt;:  I’m going to be lame and for those who have never seen it then &lt;em&gt;Star Wars: A New Hope&lt;/em&gt; and &lt;em&gt;Star Wars: The Empire Strikes Back&lt;/em&gt; are both really good and new versions like &lt;em&gt;Star Wars: Revenge of the Sith&lt;/em&gt; and &lt;em&gt;Star Wars: Rogue One&lt;/em&gt; are both really well done.  Not sure about the rest of them - too many questionable parts.  There are also modern sci-fi movies that are good like &lt;em&gt;Ex Machina&lt;/em&gt; but I tend to put those into the niche audiences and not for the majority of viewers.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Suspense&lt;/code&gt;:  Okay, one of the best shots in any movie is the day time beach scene where the young boy gets attacked in &lt;em&gt;Jaws&lt;/em&gt;.  The historical references to the USS Indianapolis and the character development make this movie very good even though it has one of the simplest plots.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sports&lt;/code&gt;:  I’m not going to recommend my favorite which is &lt;em&gt;Hoosiers&lt;/em&gt; because too many people will not share the understanding of what basketball was like in Indiana from 1950 through 1999. The movie series that I am picking as the best sports movie is the &lt;em&gt;Rocky&lt;/em&gt; series but only the first five movies.  Here is the twist.  I vote this as the best because I think it is the story of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Adrian&lt;/code&gt; and not Rocky. The best parts of all those movies is the character arc of Adrian.  Rocky’s character is not too interesting but he is likeable and most of the other characters have very little impact but Adrian connects the personal life story of Rocky with the action scenes.  Rocky as a boxing movie is fine but it is a much better drama than anything else.  In a similar way, &lt;em&gt;Rudy&lt;/em&gt; has the same formula - it’s the character that you want to see succeed whether they win or lose.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thriller&lt;/code&gt;:  Many popular choices but I think the &lt;em&gt;Sixth Sense&lt;/em&gt; wins because of the great plot twist.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Western&lt;/code&gt;:  I only have one western that I really like and that is &lt;em&gt;Tombstone&lt;/em&gt;.  I like other movies like &lt;em&gt;The Man Who Shot Liberty Valence&lt;/em&gt; and the many John Wayne and Jimmy Stewart movies but most of these movies did not have as memorable characters as &lt;em&gt;Tombstone&lt;/em&gt;.  Some modern westerns are just ridiculous or incredibly slow, i.e. &lt;em&gt;Dances with Wolves&lt;/em&gt;, &lt;em&gt;Cowboys &amp;amp; Aliens&lt;/em&gt;, &lt;em&gt;Wild Wild West&lt;/em&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;I will update this more in the future because my conversation covered many movies but these were the first few movies discussed.  I have not even started talking about the effect of Tom Hanks, Tom Cruise, and Robin Williams had on movies.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="person" /><category term="Personal" /><category term="movies" /><summary type="html">Recently, I was talking to some friends that were born in east Asia and lived in the United States for a limited time. At the time, I had been watching several Youtube videos about first time reactions to movies which led me to ask them how many Hollywood films they had seen that were made before 2000. I was not really surprised but they could name very few and some of the most iconic movies were completely unknown to them. This led to hours of talking about the best movies we had all seen and below are some movies that I thought were some of the best.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/movies.jpg" /><media:content medium="image" url="/assets/img/blog/movies.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Conda Environments…</title><link href="/articles/tech/2023-04-07-conda-environments/" rel="alternate" type="text/html" title="Conda Environments…" /><published>2023-04-07T00:00:00-05:00</published><updated>2023-08-09T09:05:39-05:00</updated><id>/articles/tech/conda-environments</id><content type="html" xml:base="/articles/tech/2023-04-07-conda-environments/">&lt;hr /&gt;

&lt;p&gt;Installing python packages can be frustrating when using libraries that are not as widely used.  It seems the development of those libraries is often more of a hobby and sometimes it expands into something more useful and the installation of those packages is a bit unwieldly.&lt;/p&gt;

&lt;p&gt;Although I use several different python package managers, this article provides several tips of how to use conda.  In my experience, it can take several hours to get the right combination to make a library work and most of this time is just letting conda determine what to install.  In some cases I have only been able to get packages to install if I have the order of the installations correct.  In these cases, I find myself incredibly frustrated.&lt;/p&gt;

&lt;p&gt;For example, I enjoy working with geospacial packages and recently was using hvplot.  It has many dependencies but in many cases these dependencies are not explicitly written in the documentation.  Even by creating a clean conda environment, I was able to install the packages without problems but immediately had missing dependencies and version conflicts when running code that I knew should work.  Mostly by luck, I knew that geopandas uses most of the same packages and their documentation about how to create a virtual environment is better.  I also had gotten that library to work before after a few tweeks but the error messages were very similar to those of hvplots.  So after creating a functioning geopandas environment, I was able to install hvplots and the associated downgrades to packges all worked so the environment functioned.  This process without doing any troubleshooting took about 45 minutes.&lt;/p&gt;

&lt;p&gt;I don’t know if there is a way of getting around this environment testing phase but here are some nice practices that may help along the way:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Always create a new environment when starting.  This will make it easier to troubleshooting and duplicate later.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Create new environment named as `envname`
conda create --name envname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;In the new conda environment, set the channels that you would like to use.  This can decrease some of the conflicts.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Set channel
conda config --env --add channels conda-forge
conda config --env --set channel_priority strict  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Once you have the environment functioning with your code, save the contents of your environment to a .yml file.  This will make it so you can duplicate the environment very quickly.  Meaning, the 45 minutes it took me to have conda figure out the versions initially are already specified in the file so it just needs to do the installation without any extra checks.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Create file containing environment specifications
conda env export &amp;gt; envname.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Using the .yml file, recreate the environment so others can directly install it.  The .yml file needs to be same directory as the terminal that runs this command.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Create environment from .yml
conda env create -f envname.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;If you forget your environment names then these commands might help.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;conda env list
conda info --envs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Also there will be times when you completely destroy an environment and deleting it will be necessary.  Sometimes it is also necessary to go to the directory location and manually delete the environment’s folder.  Often the environments are held in a folder in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; directory within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Anaconda3/envs&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Remove environment and its dependencies
conda remove --name envname --all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;More information about conda environments can be found in the &lt;a href=&quot;https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="tech" /><category term="Tech" /><category term="tools" /><category term="overview" /><summary type="html">Installing python packages can be frustrating when using libraries that are not as widely used. It seems the development of those libraries is often more of a hobby and sometimes it expands into something more useful and the installation of those packages is a bit unwieldly.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/code.jpg" /><media:content medium="image" url="/assets/img/blog/code.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Data Sources…</title><link href="/articles/tech/2023-03-17-data-sources/" rel="alternate" type="text/html" title="Data Sources…" /><published>2023-03-17T00:00:00-05:00</published><updated>2023-08-09T09:01:41-05:00</updated><id>/articles/tech/data-sources</id><content type="html" xml:base="/articles/tech/2023-03-17-data-sources/">&lt;hr /&gt;

&lt;p&gt;When I first started working with publicly accessible datasets, I would typically save them to an external hard drive.  This lasted about six months before I realized that I had over 200GB of data.  It may sound fine but my documentation of where the datasets orinated was not very good and often information about the encoding of the individual features was unclear.  Without this information, I would have been just as good off by creating synthetic data of my own.&lt;/p&gt;

&lt;p&gt;I also realized that the usefulness of the data or the validity of the data was often suspect.  So in this article, I attempt to describe factors that influence if a data set is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;good&lt;/code&gt; or not.  At the bottom of this article is my is my second attempt at aggregating my resources.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;thinking-like-a-data-scientist&quot;&gt;Thinking Like a Data Scientist&lt;/h3&gt;

&lt;p&gt;Below is a collection of data sources that might be helpful as you work on projects. Please note that you’re free to use datasets from other sources as well.  I would advise that you start looking at datasets to become familiar with what is available and the possible limitations.  Consider these questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What type of questions could I ask?&lt;/li&gt;
  &lt;li&gt;Can the data be broken into data subsets so I can discover a hidden story?&lt;/li&gt;
  &lt;li&gt;What type of graphs would tell the story well?&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Most importantly, is the data quality good enough?&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;data-quality&quot;&gt;Data Quality&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data Breadth or Variety&lt;/code&gt; - different types of measurements - categorical, numerical, geographic, time (columns)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data Quanity or Volume&lt;/code&gt; - the amount of data including repeated measurements (rows)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data Relevancy or Velocity&lt;/code&gt; - the frequency or rate that the data changes or becomes outdated/irrelevant.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Missing and Outlying and Faulty Data or Veracity&lt;/code&gt; - the values that seem to unavailable, unreasonable or impossible&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Story-Telling and Truth-Telling or Value&lt;/code&gt; - What type of story could come out of the investigation?  What uses and applications could this have? What research questions could I pose and answer?    What relationships are present?  What predictions could be made?  What is the significance?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Data Aggregations&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/public-apis/public-apis&quot;&gt;Public API’s&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/awesomedata/awesome-public-datasets&quot;&gt;Public Datasets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://datahub.io/&quot;&gt;DataHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://datasetsearch.research.google.com/&quot;&gt;Google Dataset Search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.openml.org/&quot;&gt;OpenML&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.who.int/data/gho&quot;&gt;WHO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://data.fivethirtyeight.com/&quot;&gt;FiveThirtyEight&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.opendata.aws/&quot;&gt;Amazon Open Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gapminder.org/&quot;&gt;Gapminder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://data.world/&quot;&gt;Data World&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://data.gov/&quot;&gt;Data.gov&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bfi.org.uk/industry-data-insights&quot;&gt;Industry Data (UK)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://search.earthdata.nasa.gov/search&quot;&gt;Earth Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://archive.ics.uci.edu/ml/index.php&quot;&gt;UCI Machine Learning Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://opendata.cern.ch/&quot;&gt;CERN OpenData&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/&quot;&gt;Kaggle Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Specific DataSets&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rstudio-pubs-static.s3.amazonaws.com/198801_49ebd6cd54f64d5cb60377820f4d6b89.html&quot;&gt;Billboard Top 100 Weekly 1959+&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/vikrishnan/boston-house-prices&quot;&gt;Boston Housing Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/shivamb/netflix-shows/tasks&quot;&gt;Netflix Shows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/zalando-research/fashionmnist&quot;&gt;Fashion Images (Machine Learning)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/datasets/mrmorj/dataset-of-songs-in-spotify&quot;&gt;Spotify Song Charactristics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/datasets/leonardopena/top-spotify-songs-from-20102019-by-year&quot;&gt;Spotify Top Songs Decade&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/datasets/unsdsn/world-happiness&quot;&gt;World Happiness Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;federal-data-portals&quot;&gt;Federal Data Portals&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;If the federal data is collected by the states and combined at a federal level then in many cases the data will not be collected in the same way.  Each state often develops their own definitions and procedures which can make comparing state data confusing.&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.data.gov/&quot;&gt;United States&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;https://data.cdc.gov/&quot;&gt;CDC&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://www.noaa.gov/&quot;&gt;NOAA&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://earthdata.nasa.gov/&quot;&gt;NASA&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;state-data-portals&quot;&gt;State Data Portals&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://data.web.health.state.mn.us/web/mndata/&quot;&gt;Minnesota Health Data&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;city-data-portals&quot;&gt;City Data Portals&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;City Data Portals can be interesting but they can also be confusing because you need to investigate what each variable means, how it was collected, and was it modified from its original version.  For example, rideshare data from taxi companies and app services is collected by many cities and data provided but often the location data and price data is modified to protect privacy.  This is also a very large dataset and has very little preprocessing to correct errors.  You may find a rideshare trip that lasts 20 hours and goes half way across the country.&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://data.cityofchicago.org/&quot;&gt;Chicago&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://data.boston.gov/&quot;&gt;Boston&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://opendata.cityofnewyork.us/&quot;&gt;New York&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://data.lacity.org/&quot;&gt;Los Angeles&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://rlist.io/l/major-smart-cities-with-open-data-portals&quot;&gt;For an Extensive List&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;university-research&quot;&gt;University Research&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;This can be interesting data but often is a very small, specific sample which is not representative of the larger, broader populaton as a whole.  This is often due to time, cost, and difficulty of obtaining data.  This is why graduate students may take several years to collect all the data that they need for their PhD Thesis/Dissertation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;common-api-sources&quot;&gt;Common API Sources&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;API’s can be great and they can be unpredictable.  One benefit is that you can typically get very recent information or even information that is refreshing almost instantenous.  The down side is that the owner may provide very limited access for free or the data could be very messy.  Only a couple of these have I seen used in a project.  Here are some options:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;OpenWeatherMap &lt;em&gt;(class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Yahoo Finance&lt;/li&gt;
    &lt;li&gt;OMDB &lt;em&gt;(class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;IMDB&lt;/li&gt;
    &lt;li&gt;Quandl &lt;em&gt;(later in the class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Spotify&lt;/li&gt;
    &lt;li&gt;NY Times &lt;em&gt;(class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Yelp&lt;/li&gt;
    &lt;li&gt;Mapquest&lt;/li&gt;
    &lt;li&gt;TVMaze &lt;em&gt;(class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;WorldBank &lt;em&gt;(class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Google API &lt;em&gt;(class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Census &lt;em&gt;(class activity)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;NASA API&lt;/li&gt;
    &lt;li&gt;Numbers&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;machine-learning--computer-vision&quot;&gt;Machine Learning:  Computer Vision&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Examples practical only for the final project&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/paultimothymooney/chest-xray-pneumonia&quot;&gt;Chest X-Ray Pneumonia Images (Machine Learning)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/landlord/handwriting-recognition&quot;&gt;Handwriting Samples (Machine Learning)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/fournierp/captcha-version-2-images&quot;&gt;Captcha Images (Machine Learning)&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="tech" /><category term="Tech" /><category term="overview" /><summary type="html">When I first started working with publicly accessible datasets, I would typically save them to an external hard drive. This lasted about six months before I realized that I had over 200GB of data. It may sound fine but my documentation of where the datasets orinated was not very good and often information about the encoding of the individual features was unclear. Without this information, I would have been just as good off by creating synthetic data of my own.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/library.jpg" /><media:content medium="image" url="/assets/img/blog/library.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VSCode Tips…</title><link href="/articles/tech/2023-03-17-vscode-setup/" rel="alternate" type="text/html" title="VSCode Tips…" /><published>2023-03-17T00:00:00-05:00</published><updated>2023-08-09T09:05:22-05:00</updated><id>/articles/tech/vscode-setup</id><content type="html" xml:base="/articles/tech/2023-03-17-vscode-setup/">&lt;hr /&gt;

&lt;p&gt;So there are times when you just need a place to store some notes and I keep losing these notes.  I am done searching for them; making copies to send to others; and adding extra descriptions.  This page has all the key information that a person needs to customize bas VSCode features.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CTRL&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt; then search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bracket pair&lt;/code&gt; - turn on block highlighting&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor › Bracket Pair Colorization: Enabled: (checked)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor › Guides: Bracket Pairs: active&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor › Guides: Bracket Pairs Horizontal: active&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor › Guides: Highlight Active Bracket Pair: (checked)&lt;/code&gt;
&lt;img src=&quot;/assets/img/blog/vs_code_bracket_guides.png&quot; alt=&quot;Bracket Guides&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CTRL&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt; then search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python directory&lt;/code&gt; - execute from file’s directory
&lt;img src=&quot;/assets/img/blog/vs_code_python_code_directory.png&quot; alt=&quot;Python Code Execution&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CTRL&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt; then search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terminal external&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal › External: Windows Exec:  C:\Program Files\Git\bin\bash.exe&lt;/code&gt; -  sets git bash as default terminal&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal: Explorer Kind: external&lt;/code&gt; - by right clicking of file in vscode explorer
&lt;img src=&quot;/assets/img/blog/vs_code_external_terminal.png&quot; alt=&quot;External Terminal&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CTRL&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt; then search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terminal integrated default profile windows&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal › Integrated › Default Profile: Windows: Git Bash&lt;/code&gt; - sets bottom of screen terminal to be Git Bash
&lt;img src=&quot;/assets/img/blog/vs_code_internal_terminal.png&quot; alt=&quot;Internal Terminal&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CTRL&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt; then search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python environment&lt;/code&gt; - sets terminal environment to match active interpreter&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python › Terminal: Activate Env In Current Terminal: (checked)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python › Terminal: Activate Environment: (checked)&lt;/code&gt;
&lt;img src=&quot;/assets/img/blog/vs_code_python_environment.png&quot; alt=&quot;Run Env in Terminal&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are several things that people like and one of my favorite themes is a default theme called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Monokai&lt;/code&gt;.  This theme has a dull dark grey background color and bright, high contrast text.  For some reason, I like this theme color selections for code and markdown files.&lt;/p&gt;

&lt;p&gt;An alternate theme that many people compliment is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Github Dark Default&lt;/code&gt; and is an extension that can be added to VSCode.  This theme uses a very dark black background and high contrast fonts but&lt;/p&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="tech" /><category term="Tech" /><category term="tools" /><category term="overview" /><summary type="html">So there are times when you just need a place to store some notes and I keep losing these notes. I am done searching for them; making copies to send to others; and adding extra descriptions. This page has all the key information that a person needs to customize bas VSCode features.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/code.jpg" /><media:content medium="image" url="/assets/img/blog/code.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Pearl …</title><link href="/articles/tech/2023-03-08-perl/" rel="alternate" type="text/html" title="Pearl …" /><published>2023-03-08T00:00:00-06:00</published><updated>2023-08-09T09:01:29-05:00</updated><id>/articles/tech/perl</id><content type="html" xml:base="/articles/tech/2023-03-08-perl/">&lt;hr /&gt;

&lt;p&gt;So I was recently sent about 60 GB of data on a harddrive.  The contents were contained in a single file of comma separated values and I was warned that that the data would probably be a bit messy but no one had looked at the data yet.  If I had some time, I was requested to browse over the proposed project and give feedback about what would be needed to accomplish the deliverables and what changes to the proposal might be needed if we were to accept this project.&lt;/p&gt;

&lt;p&gt;In many cases this is a quick task since we will have smaller datasets or the content will already be on a cloud system that we can gain access but in this case the data was just on a harddrive.  This was also a project where we did not want to commit many resources at this time and I was travelling so I wanted to have a method I could do while on the plane.&lt;/p&gt;

&lt;p&gt;I attempted to read the contents with Pandas and that did not work due to the file size.  This was pretty much expected.  I then turned to Vaex and some tasks worked fine but more complicated tasks would produce errors, also due to the large file size.  I thought about turning to Polars but was a bit tired of trying python methods at this point.  Polars will be a learning experience project in the near future.  Instead, I turned to Perl and GitBash.  I had used this in the past and was impressed with the speed and simplicity.&lt;/p&gt;

&lt;p&gt;I was not disappointed.  I determined how many rows of data I had and took a couple samples of 10M rows and used a simple python script to get a nice overview of what the data was like from the smaller files.  The impressive part was that the sample was generated in less than 30 seconds and was only a single line of commands.  Compared to using python and the csv package, this was much faster.  I had seen many suggestions on stack overflow to use the csv_reader but when your file is over 100M rows then this is a very slow option.&lt;/p&gt;

&lt;p&gt;Here are just two of the commands that I thought were very useful:&lt;/p&gt;

&lt;p&gt;To view the first few lines of the file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;head -3 filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To get a random sample of 5% of the data:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;perl -ne 'print if (rand() &amp;lt; .05)' large_filename &amp;gt; sampled_data_filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My next task will be to use Polars and see how I like it and to read more about Perl’s capabilities to manipulate data.  I found a free open source book entitled &lt;a href=&quot;https://datamungingwithperl.com/&quot;&gt;Data Munging with Pearl&lt;/a&gt; which will be my starting point.  The book is over 20 years old but the focus of the book’s content is in line with my goals.&lt;/p&gt;

&lt;p&gt;With all of that being said.  I really appreciate the speed and simplicity of this tool.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Side note&lt;/code&gt;:  Although this is not a perl command, I often use this terminal command also to give me hints about the data type of my document.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;file --exclude encoding filename_inserted_here.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="tech" /><category term="Tech" /><category term="tools" /><summary type="html">So I was recently sent about 60 GB of data on a harddrive. The contents were contained in a single file of comma separated values and I was warned that that the data would probably be a bit messy but no one had looked at the data yet. If I had some time, I was requested to browse over the proposed project and give feedback about what would be needed to accomplish the deliverables and what changes to the proposal might be needed if we were to accept this project.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/pearl.jpg" /><media:content medium="image" url="/assets/img/blog/pearl.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Git Visualization Tools…</title><link href="/articles/tech/2023-03-08-git-visualization/" rel="alternate" type="text/html" title="Git Visualization Tools…" /><published>2023-03-08T00:00:00-06:00</published><updated>2023-08-09T09:01:08-05:00</updated><id>/articles/tech/git-visualization</id><content type="html" xml:base="/articles/tech/2023-03-08-git-visualization/">&lt;hr /&gt;

&lt;p&gt;I am a a big fan of the use of Mac Terminal or Windows GitBash when working with git.  You will just understand what is happening better when using a command line system.  I will conceed that the terminal is not pretty looking like some of the git IDE programs but in many cases you can work around those limits.&lt;/p&gt;

&lt;p&gt;For example, you can actually visualize the branching structure of a repo through terminal.  Here are some &lt;a href=&quot;https://think-like-a-git.net/sections/graphs-and-git/visualizing-your-git-repository.html&quot;&gt;instructions&lt;/a&gt; and here is a good visual of what it could look like:&lt;br /&gt;
&lt;img src=&quot;/assets/img/blog/git_log_graph.png&quot; alt=&quot;Gitlog Graph&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For many people this will just not be appeasing.  There are some options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;GitHub Repo Insights &amp;gt; Network feature:  GitHub repos already have a visual of the branching.  It’s a nice tool that quickly lets you see the general structure and who made the changes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GitHub Projects:  I will need to come back to this feature because I am still a bit uncertain how it works.  I have been told that besides having a kanban board, you can also track the progress of branches.  I’m not sure about the visual aspect of it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GitKracken:  This was the first tool I used when learning git.  I was not proficient with terminal at the time and this was a very fancy looking interface.  Overall, it produces very nice visuals.  Other alternatives to this are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SourceTree&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitX&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VSCode Extension:  VS Code has several git related add-ons that can be used to visualize in document git history and git graphs.  Some of these are nice except I wish there was a quick toggle button so I could turn the tool on or off.  These tools have a habit of cluttering the screen while coding.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="tech" /><category term="Tech" /><category term="tools" /><summary type="html">I am a a big fan of the use of Mac Terminal or Windows GitBash when working with git. You will just understand what is happening better when using a command line system. I will conceed that the terminal is not pretty looking like some of the git IDE programs but in many cases you can work around those limits.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/moon_phases.jpg" /><media:content medium="image" url="/assets/img/blog/moon_phases.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Art of Communicating…</title><link href="/articles/interests/2023-03-07-generation_communication/" rel="alternate" type="text/html" title="The Art of Communicating…" /><published>2023-03-07T00:00:00-06:00</published><updated>2023-03-08T15:55:47-06:00</updated><id>/articles/interests/generation_communication</id><content type="html" xml:base="/articles/interests/2023-03-07-generation_communication/">&lt;hr /&gt;

&lt;p&gt;So it was about two years ago when I started getting many arbitrary questions from people about my personal interests.  Most of these questions did not really fit into the conversation and seemed to be thrown in on a whim.  It made me very curious about what the person was thinking right before they asked.&lt;/p&gt;

&lt;p&gt;I tried to be reflective afterwards and evaluate whether something I was doing had dictated the shift in conversation.  Maybe I was the cause of this behavior:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Was I being too candid so they wanted to change the subject?&lt;/li&gt;
  &lt;li&gt;Was I talking too little so they wanted to change to a more general topic?&lt;/li&gt;
  &lt;li&gt;Was I talking too much about something they didn’t care about?&lt;/li&gt;
  &lt;li&gt;Had I said something and this was this a test to find out more information about me?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I could not come up with anything that would be obvious.  In general, we were just having a casual conversation.  At the time I just shrugged off the moment as a random event but I noticed a trend starting to build over time. It didn’t really matter where the conversation took place - work, gym, coffee shop, restaurant, elevator, etc.  It didn’t really matter what brought us together - neighbor, co-worker, date, random person, etc.  If the person was under 40 years old then I typically had a similar reaction with maybe the occurances being more frequent with younger people.  Each person was interested in my personal interests and this was fine until I tried answering their questions.&lt;/p&gt;

&lt;p&gt;I have interests but I realized that I communicate those interests differently.  I talk about my interests by describing it and what I gain from it.  For example, I take bicycle rides frequently becasue I like the exercise, being outside, and exploring new places - I feel more invigorated afterwards.  In contrast, the person I was talking to described the physical description - brand, special features, color - and how they came into ownership of it.  As much as I appreciated the origin story of her bicycle, I really wondered if she actually likes riding and what motivates her to ride.  My follow up question of why do you like riding resulted in a vague ‘it is something I just like’ type of answer.   I realized that the people I was talking to were conveying very concrete and non-personal information.&lt;/p&gt;

&lt;p&gt;Now, if I was the early teen version of myself with the social skills often confused with a person on the high functioning portion of the autism spectrum then I might really enjoy these conversations.  We could take turns sharing facts.  These facts would lead to first person recounts of a past experience.  Maybe there would be a moment where they would have had a similar experience and it would be their time to share.&lt;/p&gt;

&lt;p&gt;Unfortunately, I am not that person anymore so this encounter is not exactly fulfilling or even interesting to me anymore.  Some stories like this are important and sometimes you need something like this to fill time but ultimately there should be a bit more to a conversation.  What is interesting from this experience is how often I experience or overhear people having these rote conversations.  When I try to create a deeper conversation then you would not believe the shock the person has.  It’s like in the back of their mind is a voice saying ‘those are secrets that only I can know’ or maybe for the skeptic the voice says ‘that information tells them too much about me’.&lt;/p&gt;

&lt;p&gt;Maybe these reactions are just due to the people being young.  Many people in their 20s and 30s have always had technology like a cell phone and in recent years have been more isolated due to covid.  I’m at the older end of that age spectrum and was a teenager or young adult during the beginning of the tech boom.  I will definitely attest that my generation used technology in destructive ways.  Just look at television, music, and apps that came out between 2000-2010 and you will notice a signficant amount of salacious content and promotion of stereotypes.  It was difficult to get away from these influences and I think people mimicked this ‘environment’ in their own lives.  Living through that time period meant that you learned to assess people’s intentions and really decide what you wanted out of the interaction.  Thinking back on those times, I think younger generations might think we were fairly crazy but learned to be unfazed by people and seek out honest responses that matched our standards.&lt;/p&gt;

&lt;p&gt;So to live in this dual culture, where older Millennials experienced the wild west of a social and technology paradigm shift and younger people experiencing only the after effects of the shift, the two groups will need to learn how to negotiate their differences of communication and risk taking.  I know that I will need to change how I talk in personal settings because the person might not be as open with their true opinions and feelings and that I might be too abrupt.  It will be interesting to see how the generations differ as time progresses.&lt;/p&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="interests" /><category term="Interests" /><category term="entertainment" /><summary type="html">So it was about two years ago when I started getting many arbitrary questions from people about my personal interests. Most of these questions did not really fit into the conversation and seemed to be thrown in on a whim. It made me very curious about what the person was thinking right before they asked.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/phones.jpg" /><media:content medium="image" url="/assets/img/blog/phones.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Git Naming Conventions…</title><link href="/articles/tech/2023-03-07-git-names-conventions/" rel="alternate" type="text/html" title="Git Naming Conventions…" /><published>2023-03-07T00:00:00-06:00</published><updated>2023-03-09T11:24:44-06:00</updated><id>/articles/tech/git-names-conventions</id><content type="html" xml:base="/articles/tech/2023-03-07-git-names-conventions/">&lt;hr /&gt;

&lt;p&gt;It was not until recently that I found a good article about naming conventions.  As I created more repositories and the complexity of my projects increased, I become much more cognizant of the importance of being organized.  There are many different things that can be done to keep a project orderly but here are some specifics related to Git.&lt;/p&gt;

&lt;h3 id=&quot;branch-naming&quot;&gt;Branch Naming&lt;/h3&gt;

&lt;p&gt;The article that I found was by &lt;a href=&quot;https://codingsight.com/git-branching-naming-convention-best-practices/&quot;&gt;codingsight.com&lt;/a&gt; and their naming rules just make sense.  Here are a few takeaways:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;For temporary branches, use a keyword at the beginning hat describes the type of work.
    &lt;ul&gt;
      &lt;li&gt;Bug Fix (bug)&lt;/li&gt;
      &lt;li&gt;Hot Fix (hot)&lt;/li&gt;
      &lt;li&gt;Feature Branch (feature)&lt;/li&gt;
      &lt;li&gt;Experimental Branch (experiment)&lt;/li&gt;
      &lt;li&gt;Work in Progress Branch (wip)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;If using Jira or other PMS, use a unique ID within the branch name.&lt;/li&gt;
  &lt;li&gt;Use hyphen or slashes as separators.  I should probably write more about the effect of using slashes but taht will be a different article.&lt;/li&gt;
  &lt;li&gt;Use only lowercase&lt;/li&gt;
  &lt;li&gt;Be consistent.  Decide early if words are separated by hyphens but don’t mix in underscores or periods unless there is a logical pattern.&lt;/li&gt;
  &lt;li&gt;Potentially include the authors name in the name&lt;/li&gt;
  &lt;li&gt;For branches that will take a long time to develop, use a short descriptive name.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is an example format:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;branch-type&amp;gt;_&amp;lt;author&amp;gt;_&amp;lt;branch-name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;commit-messages&quot;&gt;Commit Messages&lt;/h3&gt;

&lt;p&gt;I don’t really write detailed commit messages.  I think about it but I tend to keep all messages very short.  Here are a few heuristics from a &lt;a href=&quot;https://medium.com/@steveamaza/how-to-write-a-proper-git-commit-message-e028865e5791&quot;&gt;medium.com article&lt;/a&gt; that I do like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Keep the subject line under 50 characters long.&lt;/li&gt;
  &lt;li&gt;Explanatory text should be written in the imperative verb form - Fix bug causing outage.&lt;/li&gt;
  &lt;li&gt;The message should answer these questions:
    &lt;ol&gt;
      &lt;li&gt;Why is this change necessary?&lt;/li&gt;
      &lt;li&gt;How does this commit address the issue?&lt;/li&gt;
      &lt;li&gt;What effects does this change have?&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To keep messages shorter then the PMS ID could be added.  This is common when using JIRA.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;For larger projects, write a multiline commit message by typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit&lt;/code&gt;.  This will open a command line editor.  You can also set your default editor with this command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --global core.editor nano&lt;/code&gt;.  I actually like to use the command line method:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m &quot;Subject&quot; -m &quot;Description...&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Similar to the medium article, &lt;a href=&quot;https://www.gitkraken.com/learn/git/best-practices/git-commit-message&quot;&gt;gitkraken.com&lt;/a&gt; has a nice article that largely supports the above suggestions.&lt;/p&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="tech" /><category term="Tech" /><category term="tools" /><summary type="html">It was not until recently that I found a good article about naming conventions. As I created more repositories and the complexity of my projects increased, I become much more cognizant of the importance of being organized. There are many different things that can be done to keep a project orderly but here are some specifics related to Git.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/moon_phases.jpg" /><media:content medium="image" url="/assets/img/blog/moon_phases.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Random Blog..</title><link href="/articles/interests/2023-03-07-interests_blog/" rel="alternate" type="text/html" title="The Random Blog.." /><published>2023-03-07T00:00:00-06:00</published><updated>2023-03-08T15:56:40-06:00</updated><id>/articles/interests/interests_blog</id><content type="html" xml:base="/articles/interests/2023-03-07-interests_blog/">&lt;hr /&gt;

&lt;p&gt;As I developed this Jekyll website, I realized that I wanted to add short essays for several purposes, but for mainly two reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To let people know my professional opinions and exeriences&lt;/li&gt;
  &lt;li&gt;To let people know my technical knowledge and long-term goals&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The website was originally designed for a single blog section but I wanted to segment my content into a file structure so if I wanted to rebrand or change the purpose of the website then all the content in a folder could be easily removed or hidden.  In the end, I had two sections as outlined above.&lt;/p&gt;

&lt;p&gt;This worked initially until I realized that people were often interested in knowing my personal intersts and wanted to foster more of a connection with me as a person.  So this led me to create a third section where I can put random thoughts, entertainment and short stories about my life.&lt;/p&gt;

&lt;p&gt;This section entitled “The Random Blog” is aimed as a location where I can put those posts while keeping the other two blog’s purposes distinct.  In the near future I will also add tags so it is easier to find related posts with a simple click.&lt;/p&gt;

&lt;p&gt;I hope you enjoy and please keep in mind that the writings in this section are not meant to be taken to heart but are intended as interesting conversation starters that will hopefully lead to a meaningful debate or reflection.&lt;/p&gt;</content><author><name>Erin Wills</name><email>ejw.data@gmail.com</email></author><category term="articles" /><category term="interests" /><category term="Interests" /><category term="professionalism" /><summary type="html">As I developed this Jekyll website, I realized that I wanted to add short essays for several purposes, but for mainly two reasons:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/blog/library.jpg" /><media:content medium="image" url="/assets/img/blog/library.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>